// _variabless.scss
// ================
// Nullification
*,
*::after,
*::before{
    margin: 0;
    padding: 0;
    border: 0;
    box-sizing: border-box;
    list-style: none;
    text-decoration: none;

    font-family: 'TT Norms';
    font-size: inherit;
    font-weight: inherit;
} 

// Adaptive property
$maxWidth: 1920;
$maxWidthContainer: 994;

// Container
.container{
    max-width: $maxWidthContainer + 60 + px;
    width: 100%;
    height: 100%;
    padding: 0 30px;
    margin: 0 auto;
}

// Adaptive value
@mixin adaptiv-value($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;
    @if $type == 1 {
        // Less container
        #{$property}: $startSize + px;
        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vh - 320px) / #{$maxWidthContainer - 320}));            
        }
    } @else if $type == 2 {
        // More container
        #{$property}: $startSize + px;
        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vh - 320px) / #{$maxWidth - 320}));            
        } 
    } @else {
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vh - 320px) / #{$maxWidth - 320}));
    }
}

// Colors
$green: #00AC4E;
$grey: #4F4F4F;
$darkGrey: #343E48;
$lightGrey: #828282;
// Fonts

